2. Edit Profile:
    - entferne "Role"
    - wir brauchen Schalter (siehe Register -> 2FA Schalter) für
         a) E-Mail verifiziert true/false
         b) 2FA enabled true/false
         c) Google signin true/false
    erstmal nur die Buttons, damit man sieht wie das Benuzerkonto eingerichtet ist.
    Ob wir noch nachträgliche änderungen vornehmen lassen entscheiden wir später.
    - alerts entfernen
    - nach klick auf Updaten Profile sollte man wieder auf seine profile page weitergeleitet werden, bzw. MASTER auf user-management

5. Es gibt noch keinen Button mit dem der User seinen Account löschen kann.

7. Token refresh request automatisch aus dem frontend? route: api/users/refresh

8. Alles alert entfernen und durch sichtbare Meldungen ersetzen.

9. getUserById getAllUser -> welche Daten sollen zurück geschickt werden? sollen die Daten gefilter werden wie in der getCurrentUser? Soll unterschieden werden ob Master oder User die Daten anfordert? Sollen die Rückgabewerte gefilter werden oder bei der Datenbank-Abfrage mit 'select' gearbeitet werden?

10. warum wird bei aufrufen der seite /api/users/me 4x aufgerufen?

11. Signup view will schon userdaten abfragen.... WTF!!!!!!

12. JWT refresh testen ob es funktioniert

13. login mit email-adresse nicht mit username

14. Aktuelle Probleme (Spieler in DB speichern):
    - Verantwortlichkeiten sind vermischt: Der Controller ruft sowohl MatchLobby als auch MatchService direkt auf
    - Fehlende DB-Updates: Wenn der zweite Spieler beitritt, wird die DB nicht aktualisiert

    Saubere Trennung:
        - Controller: WebSocket-Handling
        - MatchLobby: Player-Management + Game-State
        - MatchService: Ausschließlich DB-Operationen


15. user controller / user service -> rückgabewerte ans frontend filter (siehe getCurrentUser)
