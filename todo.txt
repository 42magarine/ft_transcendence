FRONTEND:
    1. Alle 'alerts' entfernen und durch sichtbare Meldungen ersetzen.
    2. Signup View überarbeiten
        - man kann fast nichts lesen wegen dem Hintergrund
        - es gibt 3 Passwort-Felder?!
    3. User Management View (als MASTER)
        - Delete Button funktioniert nicht
        - Create User funktioniert nicht, wenn eine ungültige E-Mail eingegeben wird (vielleicht liegt der Fehler im Backend, weil der E-Mail Serive einen Fehler wirft)
    4. User View (als Master)
        - nach dem löschen eines User wird man (manchmal?) nicht richtig weitergeleitet auf den User Management View
    5. Im Bestätigungs-Fenster zum Löschen steht kein Text.
    6. Token refresh request aus dem Frontend schicken, wenn das Backend 401 (Token abgelaufen) zurückschickt. route: api/users/refresh


BACKEND:
    1. Bei allen Anfragen aus dem Frontend prüfen welche Daten das Backend zurück schicken soll.
        - getCurrentUser filtert das User Objekt und entfernt u.a. das Password bevor es ans Frontend geschickt wird.
        - Sollen die Rückgabewerte gefiltert werden oder bei der Datenbank-Abfrage mit 'select' gearbeitet werden?
        - Soll unterschieden werden ob Master oder User die Daten anfordert?


SONSTIGES:
    1. eine Interface für alle Userdaten? oder wie bisher je nach Fall ein eigenes Interface?
    2. Interfaces nach Frontend und Backend aufteilen?
    3. Soll Login nur über E-Mail oder auch über Username möglich sein/
        - Dann muss der Username beim Erstellen eines Accounts auch einzigartig sein.
        - Problem könnte signup mit Google sein, hier sollte dann ein Username z.b. mit 'Username#number' erstellt werden.
